"use strict";var __decorate=exports&&exports.__decorate||function(decorators,target,key,desc){var c=arguments.length,r=c<3?target:desc===null?desc=Object.getOwnPropertyDescriptor(target,key):desc,d;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(c<3?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r},_a,_b;Object.defineProperty(exports,"__esModule",{value:!0}),exports.QueryDefinition=exports.QueryString=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var _1=()=>{var tmp=require(".");return _1=()=>tmp,tmp},core_1=()=>{var tmp=require("../../core");return core_1=()=>tmp,tmp},metadata_resource_1=()=>{var tmp=require("../../core/lib/metadata-resource");return metadata_resource_1=()=>tmp,tmp},prop_injectable_1=()=>{var tmp=require("../../core/lib/prop-injectable");return prop_injectable_1=()=>tmp,tmp};class QueryString{constructor(props={}){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_logs_QueryStringProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,QueryString),error}this.fields=props.fields,this.sort=props.sort,this.limit=props.limit,this.display=props.display,this.statsStatementsLength=props.statsStatements?.length,this.hasStatsAndStatsStatements=!!(props.statsStatements&&props.stats),props.parseStatements?this.parse=props.parseStatements:props.parse?this.parse=[props.parse]:this.parse=[],props.filterStatements?this.filter=props.filterStatements:props.filter?this.filter=[props.filter]:this.filter=[],props.statsStatements?this.stats=props.statsStatements:props.stats?this.stats=[props.stats]:this.stats=[]}toString(){return[this.buildQueryLine("fields",this.fields?.join(", ")),...this.buildQueryLines("parse",this.parse),...this.buildQueryLines("filter",this.filter),...this.buildQueryLines("stats",this.stats),this.buildQueryLine("sort",this.sort),this.buildQueryLine("limit",this.limit?.toString()),this.buildQueryLine("display",this.display)].filter(queryLine=>queryLine!==void 0&&queryLine.length>0).join(`
| `)}buildQueryLines(command,statements){return statements===void 0?[]:statements.map(statement=>this.buildQueryLine(command,statement))}buildQueryLine(command,statement){return statement?`${command} ${statement}`:""}}exports.QueryString=QueryString,_a=JSII_RTTI_SYMBOL_1,QueryString[_a]={fqn:"aws-cdk-lib.aws_logs.QueryString",version:"2.215.0"};let QueryDefinition=class QueryDefinition2 extends core_1().Resource{constructor(scope,id,props){super(scope,id,{physicalName:props.queryDefinitionName});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_logs_QueryDefinitionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,QueryDefinition2),error}if((0,metadata_resource_1().addConstructMetadata)(this,props),props.queryString.statsStatementsLength&&props.queryString.statsStatementsLength>2)throw new(core_1()).ValidationError(`CloudWatch Logs Insights only supports up to two stats commands in a single query, received ${props.queryString.statsStatementsLength}.`,this);props.queryString.hasStatsAndStatsStatements&&core_1().Annotations.of(this).addWarningV2("QueryDefinitionStatsWarning","Both stats and statsStatements properties are provided. The stats property is deprecated and will be ignored in favor of statsStatements.");const queryDefinition=new(_1()).CfnQueryDefinition(this,"Resource",{name:props.queryDefinitionName,queryString:props.queryString.toString(),logGroupNames:typeof props.logGroups>"u"?[]:props.logGroups.flatMap(logGroup=>logGroup.logGroupName)});this.queryDefinitionId=queryDefinition.attrQueryDefinitionId}};exports.QueryDefinition=QueryDefinition,_b=JSII_RTTI_SYMBOL_1,QueryDefinition[_b]={fqn:"aws-cdk-lib.aws_logs.QueryDefinition",version:"2.215.0"},QueryDefinition.PROPERTY_INJECTION_ID="aws-cdk-lib.aws-logs.QueryDefinition",exports.QueryDefinition=QueryDefinition=__decorate([prop_injectable_1().propertyInjectable],QueryDefinition);
