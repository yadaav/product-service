"use strict";var _a,_b,_c,_d;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnOdbNetwork=exports.CfnCloudVmCluster=exports.CfnCloudExadataInfrastructure=exports.CfnCloudAutonomousVmCluster=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var cdk=()=>{var tmp=require("../../core");return cdk=()=>tmp,tmp},cfn_parse=()=>{var tmp=require("../../core/lib/helpers-internal");return cfn_parse=()=>tmp,tmp},cdk_errors=()=>{var tmp=require("../../core/lib/errors");return cdk_errors=()=>tmp,tmp};class CfnCloudAutonomousVmCluster extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnCloudAutonomousVmClusterPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new(cdk_errors()).ValidationError("Unexpected IResolvable",scope);const ret=new CfnCloudAutonomousVmCluster(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnCloudAutonomousVmCluster.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_odb_CfnCloudAutonomousVmClusterProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnCloudAutonomousVmCluster),error}this.attrAutonomousDataStoragePercentage=this.getAtt("AutonomousDataStoragePercentage",cdk().ResolutionTypeHint.NUMBER),this.attrAvailableAutonomousDataStorageSizeInTBs=this.getAtt("AvailableAutonomousDataStorageSizeInTBs",cdk().ResolutionTypeHint.NUMBER),this.attrAvailableContainerDatabases=cdk().Token.asNumber(this.getAtt("AvailableContainerDatabases",cdk().ResolutionTypeHint.NUMBER)),this.attrAvailableCpus=this.getAtt("AvailableCpus",cdk().ResolutionTypeHint.NUMBER),this.attrCloudAutonomousVmClusterArn=cdk().Token.asString(this.getAtt("CloudAutonomousVmClusterArn",cdk().ResolutionTypeHint.STRING)),this.attrCloudAutonomousVmClusterId=cdk().Token.asString(this.getAtt("CloudAutonomousVmClusterId",cdk().ResolutionTypeHint.STRING)),this.attrComputeModel=cdk().Token.asString(this.getAtt("ComputeModel",cdk().ResolutionTypeHint.STRING)),this.attrCpuCoreCount=cdk().Token.asNumber(this.getAtt("CpuCoreCount",cdk().ResolutionTypeHint.NUMBER)),this.attrCpuPercentage=this.getAtt("CpuPercentage",cdk().ResolutionTypeHint.NUMBER),this.attrDataStorageSizeInGBs=this.getAtt("DataStorageSizeInGBs",cdk().ResolutionTypeHint.NUMBER),this.attrDataStorageSizeInTBs=this.getAtt("DataStorageSizeInTBs",cdk().ResolutionTypeHint.NUMBER),this.attrDbNodeStorageSizeInGBs=cdk().Token.asNumber(this.getAtt("DbNodeStorageSizeInGBs",cdk().ResolutionTypeHint.NUMBER)),this.attrDomain=cdk().Token.asString(this.getAtt("Domain",cdk().ResolutionTypeHint.STRING)),this.attrExadataStorageInTBsLowestScaledValue=this.getAtt("ExadataStorageInTBsLowestScaledValue",cdk().ResolutionTypeHint.NUMBER),this.attrHostname=cdk().Token.asString(this.getAtt("Hostname",cdk().ResolutionTypeHint.STRING)),this.attrMaxAcdsLowestScaledValue=cdk().Token.asNumber(this.getAtt("MaxAcdsLowestScaledValue",cdk().ResolutionTypeHint.NUMBER)),this.attrMemorySizeInGBs=cdk().Token.asNumber(this.getAtt("MemorySizeInGBs",cdk().ResolutionTypeHint.NUMBER)),this.attrNodeCount=cdk().Token.asNumber(this.getAtt("NodeCount",cdk().ResolutionTypeHint.NUMBER)),this.attrNonProvisionableAutonomousContainerDatabases=cdk().Token.asNumber(this.getAtt("NonProvisionableAutonomousContainerDatabases",cdk().ResolutionTypeHint.NUMBER)),this.attrOcid=cdk().Token.asString(this.getAtt("Ocid",cdk().ResolutionTypeHint.STRING)),this.attrOciResourceAnchorName=cdk().Token.asString(this.getAtt("OciResourceAnchorName",cdk().ResolutionTypeHint.STRING)),this.attrOciUrl=cdk().Token.asString(this.getAtt("OciUrl",cdk().ResolutionTypeHint.STRING)),this.attrProvisionableAutonomousContainerDatabases=cdk().Token.asNumber(this.getAtt("ProvisionableAutonomousContainerDatabases",cdk().ResolutionTypeHint.NUMBER)),this.attrProvisionedAutonomousContainerDatabases=cdk().Token.asNumber(this.getAtt("ProvisionedAutonomousContainerDatabases",cdk().ResolutionTypeHint.NUMBER)),this.attrProvisionedCpus=this.getAtt("ProvisionedCpus",cdk().ResolutionTypeHint.NUMBER),this.attrReclaimableCpus=this.getAtt("ReclaimableCpus",cdk().ResolutionTypeHint.NUMBER),this.attrReservedCpus=this.getAtt("ReservedCpus",cdk().ResolutionTypeHint.NUMBER),this.attrShape=cdk().Token.asString(this.getAtt("Shape",cdk().ResolutionTypeHint.STRING)),this.autonomousDataStorageSizeInTBs=props.autonomousDataStorageSizeInTBs,this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::ODB::CloudAutonomousVmCluster",void 0,{tagPropertyName:"tags"}),this.cloudExadataInfrastructureId=props.cloudExadataInfrastructureId,this.cpuCoreCountPerNode=props.cpuCoreCountPerNode,this.dbServers=props.dbServers,this.description=props.description,this.displayName=props.displayName,this.isMtlsEnabledVmCluster=props.isMtlsEnabledVmCluster,this.licenseModel=props.licenseModel,this.maintenanceWindow=props.maintenanceWindow,this.memoryPerOracleComputeUnitInGBs=props.memoryPerOracleComputeUnitInGBs,this.odbNetworkId=props.odbNetworkId,this.scanListenerPortNonTls=props.scanListenerPortNonTls,this.scanListenerPortTls=props.scanListenerPortTls,this.tags=props.tags,this.timeZone=props.timeZone,this.totalContainerDatabases=props.totalContainerDatabases}get cloudAutonomousVmClusterRef(){return{cloudAutonomousVmClusterArn:this.ref}}get cfnProperties(){return{autonomousDataStorageSizeInTBs:this.autonomousDataStorageSizeInTBs,tags:this.cdkTagManager.renderTags(this.tags),cloudExadataInfrastructureId:this.cloudExadataInfrastructureId,cpuCoreCountPerNode:this.cpuCoreCountPerNode,dbServers:this.dbServers,description:this.description,displayName:this.displayName,isMtlsEnabledVmCluster:this.isMtlsEnabledVmCluster,licenseModel:this.licenseModel,maintenanceWindow:this.maintenanceWindow,memoryPerOracleComputeUnitInGBs:this.memoryPerOracleComputeUnitInGBs,odbNetworkId:this.odbNetworkId,scanListenerPortNonTls:this.scanListenerPortNonTls,scanListenerPortTls:this.scanListenerPortTls,timeZone:this.timeZone,totalContainerDatabases:this.totalContainerDatabases}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnCloudAutonomousVmCluster.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnCloudAutonomousVmClusterPropsToCloudFormation(props)}}exports.CfnCloudAutonomousVmCluster=CfnCloudAutonomousVmCluster,_a=JSII_RTTI_SYMBOL_1,CfnCloudAutonomousVmCluster[_a]={fqn:"aws-cdk-lib.aws_odb.CfnCloudAutonomousVmCluster",version:"2.215.0"},CfnCloudAutonomousVmCluster.CFN_RESOURCE_TYPE_NAME="AWS::ODB::CloudAutonomousVmCluster";function CfnCloudAutonomousVmClusterMaintenanceWindowPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("daysOfWeek",cdk().listValidator(cdk().validateString))(properties.daysOfWeek)),errors.collect(cdk().propertyValidator("hoursOfDay",cdk().listValidator(cdk().validateNumber))(properties.hoursOfDay)),errors.collect(cdk().propertyValidator("leadTimeInWeeks",cdk().validateNumber)(properties.leadTimeInWeeks)),errors.collect(cdk().propertyValidator("months",cdk().listValidator(cdk().validateString))(properties.months)),errors.collect(cdk().propertyValidator("preference",cdk().validateString)(properties.preference)),errors.collect(cdk().propertyValidator("weeksOfMonth",cdk().listValidator(cdk().validateNumber))(properties.weeksOfMonth)),errors.wrap('supplied properties not correct for "MaintenanceWindowProperty"')}function convertCfnCloudAutonomousVmClusterMaintenanceWindowPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnCloudAutonomousVmClusterMaintenanceWindowPropertyValidator(properties).assertSuccess(),{DaysOfWeek:cdk().listMapper(cdk().stringToCloudFormation)(properties.daysOfWeek),HoursOfDay:cdk().listMapper(cdk().numberToCloudFormation)(properties.hoursOfDay),LeadTimeInWeeks:cdk().numberToCloudFormation(properties.leadTimeInWeeks),Months:cdk().listMapper(cdk().stringToCloudFormation)(properties.months),Preference:cdk().stringToCloudFormation(properties.preference),WeeksOfMonth:cdk().listMapper(cdk().numberToCloudFormation)(properties.weeksOfMonth)}):properties}function CfnCloudAutonomousVmClusterMaintenanceWindowPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("daysOfWeek","DaysOfWeek",properties.DaysOfWeek!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.DaysOfWeek):void 0),ret.addPropertyResult("hoursOfDay","HoursOfDay",properties.HoursOfDay!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getNumber)(properties.HoursOfDay):void 0),ret.addPropertyResult("leadTimeInWeeks","LeadTimeInWeeks",properties.LeadTimeInWeeks!=null?cfn_parse().FromCloudFormation.getNumber(properties.LeadTimeInWeeks):void 0),ret.addPropertyResult("months","Months",properties.Months!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.Months):void 0),ret.addPropertyResult("preference","Preference",properties.Preference!=null?cfn_parse().FromCloudFormation.getString(properties.Preference):void 0),ret.addPropertyResult("weeksOfMonth","WeeksOfMonth",properties.WeeksOfMonth!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getNumber)(properties.WeeksOfMonth):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnCloudAutonomousVmClusterPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("autonomousDataStorageSizeInTBs",cdk().validateNumber)(properties.autonomousDataStorageSizeInTBs)),errors.collect(cdk().propertyValidator("cloudExadataInfrastructureId",cdk().validateString)(properties.cloudExadataInfrastructureId)),errors.collect(cdk().propertyValidator("cpuCoreCountPerNode",cdk().validateNumber)(properties.cpuCoreCountPerNode)),errors.collect(cdk().propertyValidator("dbServers",cdk().listValidator(cdk().validateString))(properties.dbServers)),errors.collect(cdk().propertyValidator("description",cdk().validateString)(properties.description)),errors.collect(cdk().propertyValidator("displayName",cdk().validateString)(properties.displayName)),errors.collect(cdk().propertyValidator("isMtlsEnabledVmCluster",cdk().validateBoolean)(properties.isMtlsEnabledVmCluster)),errors.collect(cdk().propertyValidator("licenseModel",cdk().validateString)(properties.licenseModel)),errors.collect(cdk().propertyValidator("maintenanceWindow",CfnCloudAutonomousVmClusterMaintenanceWindowPropertyValidator)(properties.maintenanceWindow)),errors.collect(cdk().propertyValidator("memoryPerOracleComputeUnitInGBs",cdk().validateNumber)(properties.memoryPerOracleComputeUnitInGBs)),errors.collect(cdk().propertyValidator("odbNetworkId",cdk().validateString)(properties.odbNetworkId)),errors.collect(cdk().propertyValidator("scanListenerPortNonTls",cdk().validateNumber)(properties.scanListenerPortNonTls)),errors.collect(cdk().propertyValidator("scanListenerPortTls",cdk().validateNumber)(properties.scanListenerPortTls)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.collect(cdk().propertyValidator("timeZone",cdk().validateString)(properties.timeZone)),errors.collect(cdk().propertyValidator("totalContainerDatabases",cdk().validateNumber)(properties.totalContainerDatabases)),errors.wrap('supplied properties not correct for "CfnCloudAutonomousVmClusterProps"')}function convertCfnCloudAutonomousVmClusterPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnCloudAutonomousVmClusterPropsValidator(properties).assertSuccess(),{AutonomousDataStorageSizeInTBs:cdk().numberToCloudFormation(properties.autonomousDataStorageSizeInTBs),CloudExadataInfrastructureId:cdk().stringToCloudFormation(properties.cloudExadataInfrastructureId),CpuCoreCountPerNode:cdk().numberToCloudFormation(properties.cpuCoreCountPerNode),DbServers:cdk().listMapper(cdk().stringToCloudFormation)(properties.dbServers),Description:cdk().stringToCloudFormation(properties.description),DisplayName:cdk().stringToCloudFormation(properties.displayName),IsMtlsEnabledVmCluster:cdk().booleanToCloudFormation(properties.isMtlsEnabledVmCluster),LicenseModel:cdk().stringToCloudFormation(properties.licenseModel),MaintenanceWindow:convertCfnCloudAutonomousVmClusterMaintenanceWindowPropertyToCloudFormation(properties.maintenanceWindow),MemoryPerOracleComputeUnitInGBs:cdk().numberToCloudFormation(properties.memoryPerOracleComputeUnitInGBs),OdbNetworkId:cdk().stringToCloudFormation(properties.odbNetworkId),ScanListenerPortNonTls:cdk().numberToCloudFormation(properties.scanListenerPortNonTls),ScanListenerPortTls:cdk().numberToCloudFormation(properties.scanListenerPortTls),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags),TimeZone:cdk().stringToCloudFormation(properties.timeZone),TotalContainerDatabases:cdk().numberToCloudFormation(properties.totalContainerDatabases)}):properties}function CfnCloudAutonomousVmClusterPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("autonomousDataStorageSizeInTBs","AutonomousDataStorageSizeInTBs",properties.AutonomousDataStorageSizeInTBs!=null?cfn_parse().FromCloudFormation.getNumber(properties.AutonomousDataStorageSizeInTBs):void 0),ret.addPropertyResult("cloudExadataInfrastructureId","CloudExadataInfrastructureId",properties.CloudExadataInfrastructureId!=null?cfn_parse().FromCloudFormation.getString(properties.CloudExadataInfrastructureId):void 0),ret.addPropertyResult("cpuCoreCountPerNode","CpuCoreCountPerNode",properties.CpuCoreCountPerNode!=null?cfn_parse().FromCloudFormation.getNumber(properties.CpuCoreCountPerNode):void 0),ret.addPropertyResult("dbServers","DbServers",properties.DbServers!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.DbServers):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse().FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("displayName","DisplayName",properties.DisplayName!=null?cfn_parse().FromCloudFormation.getString(properties.DisplayName):void 0),ret.addPropertyResult("isMtlsEnabledVmCluster","IsMtlsEnabledVmCluster",properties.IsMtlsEnabledVmCluster!=null?cfn_parse().FromCloudFormation.getBoolean(properties.IsMtlsEnabledVmCluster):void 0),ret.addPropertyResult("licenseModel","LicenseModel",properties.LicenseModel!=null?cfn_parse().FromCloudFormation.getString(properties.LicenseModel):void 0),ret.addPropertyResult("maintenanceWindow","MaintenanceWindow",properties.MaintenanceWindow!=null?CfnCloudAutonomousVmClusterMaintenanceWindowPropertyFromCloudFormation(properties.MaintenanceWindow):void 0),ret.addPropertyResult("memoryPerOracleComputeUnitInGBs","MemoryPerOracleComputeUnitInGBs",properties.MemoryPerOracleComputeUnitInGBs!=null?cfn_parse().FromCloudFormation.getNumber(properties.MemoryPerOracleComputeUnitInGBs):void 0),ret.addPropertyResult("odbNetworkId","OdbNetworkId",properties.OdbNetworkId!=null?cfn_parse().FromCloudFormation.getString(properties.OdbNetworkId):void 0),ret.addPropertyResult("scanListenerPortNonTls","ScanListenerPortNonTls",properties.ScanListenerPortNonTls!=null?cfn_parse().FromCloudFormation.getNumber(properties.ScanListenerPortNonTls):void 0),ret.addPropertyResult("scanListenerPortTls","ScanListenerPortTls",properties.ScanListenerPortTls!=null?cfn_parse().FromCloudFormation.getNumber(properties.ScanListenerPortTls):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("timeZone","TimeZone",properties.TimeZone!=null?cfn_parse().FromCloudFormation.getString(properties.TimeZone):void 0),ret.addPropertyResult("totalContainerDatabases","TotalContainerDatabases",properties.TotalContainerDatabases!=null?cfn_parse().FromCloudFormation.getNumber(properties.TotalContainerDatabases):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnCloudExadataInfrastructure extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnCloudExadataInfrastructurePropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new(cdk_errors()).ValidationError("Unexpected IResolvable",scope);const ret=new CfnCloudExadataInfrastructure(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnCloudExadataInfrastructure.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_odb_CfnCloudExadataInfrastructureProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnCloudExadataInfrastructure),error}this.attrActivatedStorageCount=cdk().Token.asNumber(this.getAtt("ActivatedStorageCount",cdk().ResolutionTypeHint.NUMBER)),this.attrAdditionalStorageCount=cdk().Token.asNumber(this.getAtt("AdditionalStorageCount",cdk().ResolutionTypeHint.NUMBER)),this.attrAvailableStorageSizeInGBs=cdk().Token.asNumber(this.getAtt("AvailableStorageSizeInGBs",cdk().ResolutionTypeHint.NUMBER)),this.attrCloudExadataInfrastructureArn=cdk().Token.asString(this.getAtt("CloudExadataInfrastructureArn",cdk().ResolutionTypeHint.STRING)),this.attrCloudExadataInfrastructureId=cdk().Token.asString(this.getAtt("CloudExadataInfrastructureId",cdk().ResolutionTypeHint.STRING)),this.attrComputeModel=cdk().Token.asString(this.getAtt("ComputeModel",cdk().ResolutionTypeHint.STRING)),this.attrCpuCount=cdk().Token.asNumber(this.getAtt("CpuCount",cdk().ResolutionTypeHint.NUMBER)),this.attrDataStorageSizeInTBs=this.getAtt("DataStorageSizeInTBs",cdk().ResolutionTypeHint.NUMBER),this.attrDbNodeStorageSizeInGBs=cdk().Token.asNumber(this.getAtt("DbNodeStorageSizeInGBs",cdk().ResolutionTypeHint.NUMBER)),this.attrDbServerIds=cdk().Token.asList(this.getAtt("DbServerIds",cdk().ResolutionTypeHint.STRING_LIST)),this.attrDbServerVersion=cdk().Token.asString(this.getAtt("DbServerVersion",cdk().ResolutionTypeHint.STRING)),this.attrMaxCpuCount=cdk().Token.asNumber(this.getAtt("MaxCpuCount",cdk().ResolutionTypeHint.NUMBER)),this.attrMaxDataStorageInTBs=this.getAtt("MaxDataStorageInTBs",cdk().ResolutionTypeHint.NUMBER),this.attrMaxDbNodeStorageSizeInGBs=cdk().Token.asNumber(this.getAtt("MaxDbNodeStorageSizeInGBs",cdk().ResolutionTypeHint.NUMBER)),this.attrMaxMemoryInGBs=cdk().Token.asNumber(this.getAtt("MaxMemoryInGBs",cdk().ResolutionTypeHint.NUMBER)),this.attrMemorySizeInGBs=cdk().Token.asNumber(this.getAtt("MemorySizeInGBs",cdk().ResolutionTypeHint.NUMBER)),this.attrOcid=cdk().Token.asString(this.getAtt("Ocid",cdk().ResolutionTypeHint.STRING)),this.attrOciResourceAnchorName=cdk().Token.asString(this.getAtt("OciResourceAnchorName",cdk().ResolutionTypeHint.STRING)),this.attrOciUrl=cdk().Token.asString(this.getAtt("OciUrl",cdk().ResolutionTypeHint.STRING)),this.attrStorageServerVersion=cdk().Token.asString(this.getAtt("StorageServerVersion",cdk().ResolutionTypeHint.STRING)),this.attrTotalStorageSizeInGBs=cdk().Token.asNumber(this.getAtt("TotalStorageSizeInGBs",cdk().ResolutionTypeHint.NUMBER)),this.availabilityZone=props.availabilityZone,this.availabilityZoneId=props.availabilityZoneId,this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::ODB::CloudExadataInfrastructure",void 0,{tagPropertyName:"tags"}),this.computeCount=props.computeCount,this.customerContactsToSendToOci=props.customerContactsToSendToOci,this.databaseServerType=props.databaseServerType,this.displayName=props.displayName,this.shape=props.shape,this.storageCount=props.storageCount,this.storageServerType=props.storageServerType,this.tags=props.tags}get cloudExadataInfrastructureRef(){return{cloudExadataInfrastructureArn:this.ref}}get cfnProperties(){return{availabilityZone:this.availabilityZone,availabilityZoneId:this.availabilityZoneId,tags:this.cdkTagManager.renderTags(this.tags),computeCount:this.computeCount,customerContactsToSendToOci:this.customerContactsToSendToOci,databaseServerType:this.databaseServerType,displayName:this.displayName,shape:this.shape,storageCount:this.storageCount,storageServerType:this.storageServerType}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnCloudExadataInfrastructure.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnCloudExadataInfrastructurePropsToCloudFormation(props)}}exports.CfnCloudExadataInfrastructure=CfnCloudExadataInfrastructure,_b=JSII_RTTI_SYMBOL_1,CfnCloudExadataInfrastructure[_b]={fqn:"aws-cdk-lib.aws_odb.CfnCloudExadataInfrastructure",version:"2.215.0"},CfnCloudExadataInfrastructure.CFN_RESOURCE_TYPE_NAME="AWS::ODB::CloudExadataInfrastructure";function CfnCloudExadataInfrastructureCustomerContactPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("email",cdk().validateString)(properties.email)),errors.wrap('supplied properties not correct for "CustomerContactProperty"')}function convertCfnCloudExadataInfrastructureCustomerContactPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnCloudExadataInfrastructureCustomerContactPropertyValidator(properties).assertSuccess(),{Email:cdk().stringToCloudFormation(properties.email)}):properties}function CfnCloudExadataInfrastructureCustomerContactPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("email","Email",properties.Email!=null?cfn_parse().FromCloudFormation.getString(properties.Email):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnCloudExadataInfrastructurePropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("availabilityZone",cdk().validateString)(properties.availabilityZone)),errors.collect(cdk().propertyValidator("availabilityZoneId",cdk().validateString)(properties.availabilityZoneId)),errors.collect(cdk().propertyValidator("computeCount",cdk().validateNumber)(properties.computeCount)),errors.collect(cdk().propertyValidator("customerContactsToSendToOci",cdk().listValidator(CfnCloudExadataInfrastructureCustomerContactPropertyValidator))(properties.customerContactsToSendToOci)),errors.collect(cdk().propertyValidator("databaseServerType",cdk().validateString)(properties.databaseServerType)),errors.collect(cdk().propertyValidator("displayName",cdk().validateString)(properties.displayName)),errors.collect(cdk().propertyValidator("shape",cdk().validateString)(properties.shape)),errors.collect(cdk().propertyValidator("storageCount",cdk().validateNumber)(properties.storageCount)),errors.collect(cdk().propertyValidator("storageServerType",cdk().validateString)(properties.storageServerType)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnCloudExadataInfrastructureProps"')}function convertCfnCloudExadataInfrastructurePropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnCloudExadataInfrastructurePropsValidator(properties).assertSuccess(),{AvailabilityZone:cdk().stringToCloudFormation(properties.availabilityZone),AvailabilityZoneId:cdk().stringToCloudFormation(properties.availabilityZoneId),ComputeCount:cdk().numberToCloudFormation(properties.computeCount),CustomerContactsToSendToOCI:cdk().listMapper(convertCfnCloudExadataInfrastructureCustomerContactPropertyToCloudFormation)(properties.customerContactsToSendToOci),DatabaseServerType:cdk().stringToCloudFormation(properties.databaseServerType),DisplayName:cdk().stringToCloudFormation(properties.displayName),Shape:cdk().stringToCloudFormation(properties.shape),StorageCount:cdk().numberToCloudFormation(properties.storageCount),StorageServerType:cdk().stringToCloudFormation(properties.storageServerType),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags)}):properties}function CfnCloudExadataInfrastructurePropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("availabilityZone","AvailabilityZone",properties.AvailabilityZone!=null?cfn_parse().FromCloudFormation.getString(properties.AvailabilityZone):void 0),ret.addPropertyResult("availabilityZoneId","AvailabilityZoneId",properties.AvailabilityZoneId!=null?cfn_parse().FromCloudFormation.getString(properties.AvailabilityZoneId):void 0),ret.addPropertyResult("computeCount","ComputeCount",properties.ComputeCount!=null?cfn_parse().FromCloudFormation.getNumber(properties.ComputeCount):void 0),ret.addPropertyResult("customerContactsToSendToOci","CustomerContactsToSendToOCI",properties.CustomerContactsToSendToOCI!=null?cfn_parse().FromCloudFormation.getArray(CfnCloudExadataInfrastructureCustomerContactPropertyFromCloudFormation)(properties.CustomerContactsToSendToOCI):void 0),ret.addPropertyResult("databaseServerType","DatabaseServerType",properties.DatabaseServerType!=null?cfn_parse().FromCloudFormation.getString(properties.DatabaseServerType):void 0),ret.addPropertyResult("displayName","DisplayName",properties.DisplayName!=null?cfn_parse().FromCloudFormation.getString(properties.DisplayName):void 0),ret.addPropertyResult("shape","Shape",properties.Shape!=null?cfn_parse().FromCloudFormation.getString(properties.Shape):void 0),ret.addPropertyResult("storageCount","StorageCount",properties.StorageCount!=null?cfn_parse().FromCloudFormation.getNumber(properties.StorageCount):void 0),ret.addPropertyResult("storageServerType","StorageServerType",properties.StorageServerType!=null?cfn_parse().FromCloudFormation.getString(properties.StorageServerType):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnCloudVmCluster extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnCloudVmClusterPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new(cdk_errors()).ValidationError("Unexpected IResolvable",scope);const ret=new CfnCloudVmCluster(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnCloudVmCluster.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_odb_CfnCloudVmClusterProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnCloudVmCluster),error}this.attrCloudVmClusterArn=cdk().Token.asString(this.getAtt("CloudVmClusterArn",cdk().ResolutionTypeHint.STRING)),this.attrCloudVmClusterId=cdk().Token.asString(this.getAtt("CloudVmClusterId",cdk().ResolutionTypeHint.STRING)),this.attrComputeModel=cdk().Token.asString(this.getAtt("ComputeModel",cdk().ResolutionTypeHint.STRING)),this.attrDiskRedundancy=cdk().Token.asString(this.getAtt("DiskRedundancy",cdk().ResolutionTypeHint.STRING)),this.attrDomain=cdk().Token.asString(this.getAtt("Domain",cdk().ResolutionTypeHint.STRING)),this.attrListenerPort=cdk().Token.asNumber(this.getAtt("ListenerPort",cdk().ResolutionTypeHint.NUMBER)),this.attrNodeCount=cdk().Token.asNumber(this.getAtt("NodeCount",cdk().ResolutionTypeHint.NUMBER)),this.attrOcid=cdk().Token.asString(this.getAtt("Ocid",cdk().ResolutionTypeHint.STRING)),this.attrOciResourceAnchorName=cdk().Token.asString(this.getAtt("OciResourceAnchorName",cdk().ResolutionTypeHint.STRING)),this.attrOciUrl=cdk().Token.asString(this.getAtt("OciUrl",cdk().ResolutionTypeHint.STRING)),this.attrScanDnsName=cdk().Token.asString(this.getAtt("ScanDnsName",cdk().ResolutionTypeHint.STRING)),this.attrScanIpIds=cdk().Token.asList(this.getAtt("ScanIpIds",cdk().ResolutionTypeHint.STRING_LIST)),this.attrShape=cdk().Token.asString(this.getAtt("Shape",cdk().ResolutionTypeHint.STRING)),this.attrStorageSizeInGBs=cdk().Token.asNumber(this.getAtt("StorageSizeInGBs",cdk().ResolutionTypeHint.NUMBER)),this.attrVipIds=cdk().Token.asList(this.getAtt("VipIds",cdk().ResolutionTypeHint.STRING_LIST)),this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::ODB::CloudVmCluster",void 0,{tagPropertyName:"tags"}),this.cloudExadataInfrastructureId=props.cloudExadataInfrastructureId,this.clusterName=props.clusterName,this.cpuCoreCount=props.cpuCoreCount,this.dataCollectionOptions=props.dataCollectionOptions,this.dataStorageSizeInTBs=props.dataStorageSizeInTBs,this.dbNodeStorageSizeInGBs=props.dbNodeStorageSizeInGBs,this.dbServers=props.dbServers,this.displayName=props.displayName,this.giVersion=props.giVersion,this.hostname=props.hostname,this.isLocalBackupEnabled=props.isLocalBackupEnabled,this.isSparseDiskgroupEnabled=props.isSparseDiskgroupEnabled,this.licenseModel=props.licenseModel,this.memorySizeInGBs=props.memorySizeInGBs,this.odbNetworkId=props.odbNetworkId,this.scanListenerPortTcp=props.scanListenerPortTcp,this.sshPublicKeys=props.sshPublicKeys,this.systemVersion=props.systemVersion,this.tags=props.tags,this.timeZone=props.timeZone}get cloudVmClusterRef(){return{cloudVmClusterArn:this.ref}}get cfnProperties(){return{tags:this.cdkTagManager.renderTags(this.tags),cloudExadataInfrastructureId:this.cloudExadataInfrastructureId,clusterName:this.clusterName,cpuCoreCount:this.cpuCoreCount,dataCollectionOptions:this.dataCollectionOptions,dataStorageSizeInTBs:this.dataStorageSizeInTBs,dbNodeStorageSizeInGBs:this.dbNodeStorageSizeInGBs,dbServers:this.dbServers,displayName:this.displayName,giVersion:this.giVersion,hostname:this.hostname,isLocalBackupEnabled:this.isLocalBackupEnabled,isSparseDiskgroupEnabled:this.isSparseDiskgroupEnabled,licenseModel:this.licenseModel,memorySizeInGBs:this.memorySizeInGBs,odbNetworkId:this.odbNetworkId,scanListenerPortTcp:this.scanListenerPortTcp,sshPublicKeys:this.sshPublicKeys,systemVersion:this.systemVersion,timeZone:this.timeZone}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnCloudVmCluster.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnCloudVmClusterPropsToCloudFormation(props)}}exports.CfnCloudVmCluster=CfnCloudVmCluster,_c=JSII_RTTI_SYMBOL_1,CfnCloudVmCluster[_c]={fqn:"aws-cdk-lib.aws_odb.CfnCloudVmCluster",version:"2.215.0"},CfnCloudVmCluster.CFN_RESOURCE_TYPE_NAME="AWS::ODB::CloudVmCluster";function CfnCloudVmClusterDataCollectionOptionsPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("isDiagnosticsEventsEnabled",cdk().validateBoolean)(properties.isDiagnosticsEventsEnabled)),errors.collect(cdk().propertyValidator("isHealthMonitoringEnabled",cdk().validateBoolean)(properties.isHealthMonitoringEnabled)),errors.collect(cdk().propertyValidator("isIncidentLogsEnabled",cdk().validateBoolean)(properties.isIncidentLogsEnabled)),errors.wrap('supplied properties not correct for "DataCollectionOptionsProperty"')}function convertCfnCloudVmClusterDataCollectionOptionsPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnCloudVmClusterDataCollectionOptionsPropertyValidator(properties).assertSuccess(),{IsDiagnosticsEventsEnabled:cdk().booleanToCloudFormation(properties.isDiagnosticsEventsEnabled),IsHealthMonitoringEnabled:cdk().booleanToCloudFormation(properties.isHealthMonitoringEnabled),IsIncidentLogsEnabled:cdk().booleanToCloudFormation(properties.isIncidentLogsEnabled)}):properties}function CfnCloudVmClusterDataCollectionOptionsPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("isDiagnosticsEventsEnabled","IsDiagnosticsEventsEnabled",properties.IsDiagnosticsEventsEnabled!=null?cfn_parse().FromCloudFormation.getBoolean(properties.IsDiagnosticsEventsEnabled):void 0),ret.addPropertyResult("isHealthMonitoringEnabled","IsHealthMonitoringEnabled",properties.IsHealthMonitoringEnabled!=null?cfn_parse().FromCloudFormation.getBoolean(properties.IsHealthMonitoringEnabled):void 0),ret.addPropertyResult("isIncidentLogsEnabled","IsIncidentLogsEnabled",properties.IsIncidentLogsEnabled!=null?cfn_parse().FromCloudFormation.getBoolean(properties.IsIncidentLogsEnabled):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnCloudVmClusterPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("cloudExadataInfrastructureId",cdk().validateString)(properties.cloudExadataInfrastructureId)),errors.collect(cdk().propertyValidator("clusterName",cdk().validateString)(properties.clusterName)),errors.collect(cdk().propertyValidator("cpuCoreCount",cdk().validateNumber)(properties.cpuCoreCount)),errors.collect(cdk().propertyValidator("dataCollectionOptions",CfnCloudVmClusterDataCollectionOptionsPropertyValidator)(properties.dataCollectionOptions)),errors.collect(cdk().propertyValidator("dataStorageSizeInTBs",cdk().validateNumber)(properties.dataStorageSizeInTBs)),errors.collect(cdk().propertyValidator("dbNodeStorageSizeInGBs",cdk().validateNumber)(properties.dbNodeStorageSizeInGBs)),errors.collect(cdk().propertyValidator("dbServers",cdk().listValidator(cdk().validateString))(properties.dbServers)),errors.collect(cdk().propertyValidator("displayName",cdk().validateString)(properties.displayName)),errors.collect(cdk().propertyValidator("giVersion",cdk().validateString)(properties.giVersion)),errors.collect(cdk().propertyValidator("hostname",cdk().validateString)(properties.hostname)),errors.collect(cdk().propertyValidator("isLocalBackupEnabled",cdk().validateBoolean)(properties.isLocalBackupEnabled)),errors.collect(cdk().propertyValidator("isSparseDiskgroupEnabled",cdk().validateBoolean)(properties.isSparseDiskgroupEnabled)),errors.collect(cdk().propertyValidator("licenseModel",cdk().validateString)(properties.licenseModel)),errors.collect(cdk().propertyValidator("memorySizeInGBs",cdk().validateNumber)(properties.memorySizeInGBs)),errors.collect(cdk().propertyValidator("odbNetworkId",cdk().validateString)(properties.odbNetworkId)),errors.collect(cdk().propertyValidator("scanListenerPortTcp",cdk().validateNumber)(properties.scanListenerPortTcp)),errors.collect(cdk().propertyValidator("sshPublicKeys",cdk().listValidator(cdk().validateString))(properties.sshPublicKeys)),errors.collect(cdk().propertyValidator("systemVersion",cdk().validateString)(properties.systemVersion)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.collect(cdk().propertyValidator("timeZone",cdk().validateString)(properties.timeZone)),errors.wrap('supplied properties not correct for "CfnCloudVmClusterProps"')}function convertCfnCloudVmClusterPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnCloudVmClusterPropsValidator(properties).assertSuccess(),{CloudExadataInfrastructureId:cdk().stringToCloudFormation(properties.cloudExadataInfrastructureId),ClusterName:cdk().stringToCloudFormation(properties.clusterName),CpuCoreCount:cdk().numberToCloudFormation(properties.cpuCoreCount),DataCollectionOptions:convertCfnCloudVmClusterDataCollectionOptionsPropertyToCloudFormation(properties.dataCollectionOptions),DataStorageSizeInTBs:cdk().numberToCloudFormation(properties.dataStorageSizeInTBs),DbNodeStorageSizeInGBs:cdk().numberToCloudFormation(properties.dbNodeStorageSizeInGBs),DbServers:cdk().listMapper(cdk().stringToCloudFormation)(properties.dbServers),DisplayName:cdk().stringToCloudFormation(properties.displayName),GiVersion:cdk().stringToCloudFormation(properties.giVersion),Hostname:cdk().stringToCloudFormation(properties.hostname),IsLocalBackupEnabled:cdk().booleanToCloudFormation(properties.isLocalBackupEnabled),IsSparseDiskgroupEnabled:cdk().booleanToCloudFormation(properties.isSparseDiskgroupEnabled),LicenseModel:cdk().stringToCloudFormation(properties.licenseModel),MemorySizeInGBs:cdk().numberToCloudFormation(properties.memorySizeInGBs),OdbNetworkId:cdk().stringToCloudFormation(properties.odbNetworkId),ScanListenerPortTcp:cdk().numberToCloudFormation(properties.scanListenerPortTcp),SshPublicKeys:cdk().listMapper(cdk().stringToCloudFormation)(properties.sshPublicKeys),SystemVersion:cdk().stringToCloudFormation(properties.systemVersion),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags),TimeZone:cdk().stringToCloudFormation(properties.timeZone)}):properties}function CfnCloudVmClusterPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("cloudExadataInfrastructureId","CloudExadataInfrastructureId",properties.CloudExadataInfrastructureId!=null?cfn_parse().FromCloudFormation.getString(properties.CloudExadataInfrastructureId):void 0),ret.addPropertyResult("clusterName","ClusterName",properties.ClusterName!=null?cfn_parse().FromCloudFormation.getString(properties.ClusterName):void 0),ret.addPropertyResult("cpuCoreCount","CpuCoreCount",properties.CpuCoreCount!=null?cfn_parse().FromCloudFormation.getNumber(properties.CpuCoreCount):void 0),ret.addPropertyResult("dataCollectionOptions","DataCollectionOptions",properties.DataCollectionOptions!=null?CfnCloudVmClusterDataCollectionOptionsPropertyFromCloudFormation(properties.DataCollectionOptions):void 0),ret.addPropertyResult("dataStorageSizeInTBs","DataStorageSizeInTBs",properties.DataStorageSizeInTBs!=null?cfn_parse().FromCloudFormation.getNumber(properties.DataStorageSizeInTBs):void 0),ret.addPropertyResult("dbNodeStorageSizeInGBs","DbNodeStorageSizeInGBs",properties.DbNodeStorageSizeInGBs!=null?cfn_parse().FromCloudFormation.getNumber(properties.DbNodeStorageSizeInGBs):void 0),ret.addPropertyResult("dbServers","DbServers",properties.DbServers!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.DbServers):void 0),ret.addPropertyResult("displayName","DisplayName",properties.DisplayName!=null?cfn_parse().FromCloudFormation.getString(properties.DisplayName):void 0),ret.addPropertyResult("giVersion","GiVersion",properties.GiVersion!=null?cfn_parse().FromCloudFormation.getString(properties.GiVersion):void 0),ret.addPropertyResult("hostname","Hostname",properties.Hostname!=null?cfn_parse().FromCloudFormation.getString(properties.Hostname):void 0),ret.addPropertyResult("isLocalBackupEnabled","IsLocalBackupEnabled",properties.IsLocalBackupEnabled!=null?cfn_parse().FromCloudFormation.getBoolean(properties.IsLocalBackupEnabled):void 0),ret.addPropertyResult("isSparseDiskgroupEnabled","IsSparseDiskgroupEnabled",properties.IsSparseDiskgroupEnabled!=null?cfn_parse().FromCloudFormation.getBoolean(properties.IsSparseDiskgroupEnabled):void 0),ret.addPropertyResult("licenseModel","LicenseModel",properties.LicenseModel!=null?cfn_parse().FromCloudFormation.getString(properties.LicenseModel):void 0),ret.addPropertyResult("memorySizeInGBs","MemorySizeInGBs",properties.MemorySizeInGBs!=null?cfn_parse().FromCloudFormation.getNumber(properties.MemorySizeInGBs):void 0),ret.addPropertyResult("odbNetworkId","OdbNetworkId",properties.OdbNetworkId!=null?cfn_parse().FromCloudFormation.getString(properties.OdbNetworkId):void 0),ret.addPropertyResult("scanListenerPortTcp","ScanListenerPortTcp",properties.ScanListenerPortTcp!=null?cfn_parse().FromCloudFormation.getNumber(properties.ScanListenerPortTcp):void 0),ret.addPropertyResult("sshPublicKeys","SshPublicKeys",properties.SshPublicKeys!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.SshPublicKeys):void 0),ret.addPropertyResult("systemVersion","SystemVersion",properties.SystemVersion!=null?cfn_parse().FromCloudFormation.getString(properties.SystemVersion):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("timeZone","TimeZone",properties.TimeZone!=null?cfn_parse().FromCloudFormation.getString(properties.TimeZone):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnOdbNetwork extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnOdbNetworkPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new(cdk_errors()).ValidationError("Unexpected IResolvable",scope);const ret=new CfnOdbNetwork(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnOdbNetwork.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_odb_CfnOdbNetworkProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnOdbNetwork),error}this.attrOciNetworkAnchorId=cdk().Token.asString(this.getAtt("OciNetworkAnchorId",cdk().ResolutionTypeHint.STRING)),this.attrOciResourceAnchorName=cdk().Token.asString(this.getAtt("OciResourceAnchorName",cdk().ResolutionTypeHint.STRING)),this.attrOciVcnUrl=cdk().Token.asString(this.getAtt("OciVcnUrl",cdk().ResolutionTypeHint.STRING)),this.attrOdbNetworkArn=cdk().Token.asString(this.getAtt("OdbNetworkArn",cdk().ResolutionTypeHint.STRING)),this.attrOdbNetworkId=cdk().Token.asString(this.getAtt("OdbNetworkId",cdk().ResolutionTypeHint.STRING)),this.availabilityZone=props.availabilityZone,this.availabilityZoneId=props.availabilityZoneId,this.backupSubnetCidr=props.backupSubnetCidr,this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::ODB::OdbNetwork",void 0,{tagPropertyName:"tags"}),this.clientSubnetCidr=props.clientSubnetCidr,this.defaultDnsPrefix=props.defaultDnsPrefix,this.deleteAssociatedResources=props.deleteAssociatedResources,this.displayName=props.displayName,this.tags=props.tags}get odbNetworkRef(){return{odbNetworkArn:this.ref}}get cfnProperties(){return{availabilityZone:this.availabilityZone,availabilityZoneId:this.availabilityZoneId,backupSubnetCidr:this.backupSubnetCidr,tags:this.cdkTagManager.renderTags(this.tags),clientSubnetCidr:this.clientSubnetCidr,defaultDnsPrefix:this.defaultDnsPrefix,deleteAssociatedResources:this.deleteAssociatedResources,displayName:this.displayName}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnOdbNetwork.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnOdbNetworkPropsToCloudFormation(props)}}exports.CfnOdbNetwork=CfnOdbNetwork,_d=JSII_RTTI_SYMBOL_1,CfnOdbNetwork[_d]={fqn:"aws-cdk-lib.aws_odb.CfnOdbNetwork",version:"2.215.0"},CfnOdbNetwork.CFN_RESOURCE_TYPE_NAME="AWS::ODB::OdbNetwork";function CfnOdbNetworkPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("availabilityZone",cdk().validateString)(properties.availabilityZone)),errors.collect(cdk().propertyValidator("availabilityZoneId",cdk().validateString)(properties.availabilityZoneId)),errors.collect(cdk().propertyValidator("backupSubnetCidr",cdk().validateString)(properties.backupSubnetCidr)),errors.collect(cdk().propertyValidator("clientSubnetCidr",cdk().validateString)(properties.clientSubnetCidr)),errors.collect(cdk().propertyValidator("defaultDnsPrefix",cdk().validateString)(properties.defaultDnsPrefix)),errors.collect(cdk().propertyValidator("deleteAssociatedResources",cdk().validateBoolean)(properties.deleteAssociatedResources)),errors.collect(cdk().propertyValidator("displayName",cdk().validateString)(properties.displayName)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnOdbNetworkProps"')}function convertCfnOdbNetworkPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnOdbNetworkPropsValidator(properties).assertSuccess(),{AvailabilityZone:cdk().stringToCloudFormation(properties.availabilityZone),AvailabilityZoneId:cdk().stringToCloudFormation(properties.availabilityZoneId),BackupSubnetCidr:cdk().stringToCloudFormation(properties.backupSubnetCidr),ClientSubnetCidr:cdk().stringToCloudFormation(properties.clientSubnetCidr),DefaultDnsPrefix:cdk().stringToCloudFormation(properties.defaultDnsPrefix),DeleteAssociatedResources:cdk().booleanToCloudFormation(properties.deleteAssociatedResources),DisplayName:cdk().stringToCloudFormation(properties.displayName),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags)}):properties}function CfnOdbNetworkPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("availabilityZone","AvailabilityZone",properties.AvailabilityZone!=null?cfn_parse().FromCloudFormation.getString(properties.AvailabilityZone):void 0),ret.addPropertyResult("availabilityZoneId","AvailabilityZoneId",properties.AvailabilityZoneId!=null?cfn_parse().FromCloudFormation.getString(properties.AvailabilityZoneId):void 0),ret.addPropertyResult("backupSubnetCidr","BackupSubnetCidr",properties.BackupSubnetCidr!=null?cfn_parse().FromCloudFormation.getString(properties.BackupSubnetCidr):void 0),ret.addPropertyResult("clientSubnetCidr","ClientSubnetCidr",properties.ClientSubnetCidr!=null?cfn_parse().FromCloudFormation.getString(properties.ClientSubnetCidr):void 0),ret.addPropertyResult("defaultDnsPrefix","DefaultDnsPrefix",properties.DefaultDnsPrefix!=null?cfn_parse().FromCloudFormation.getString(properties.DefaultDnsPrefix):void 0),ret.addPropertyResult("deleteAssociatedResources","DeleteAssociatedResources",properties.DeleteAssociatedResources!=null?cfn_parse().FromCloudFormation.getBoolean(properties.DeleteAssociatedResources):void 0),ret.addPropertyResult("displayName","DisplayName",properties.DisplayName!=null?cfn_parse().FromCloudFormation.getString(properties.DisplayName):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
